apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: kaniko-pvc-build-
spec:
  entrypoint: kaniko-build-flow
  volumeClaimTemplates:
    - metadata:
        name: workdir
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
    - metadata:
        name: workdir-app
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi

  templates:

    - name: kaniko-build-flow
      steps:
        - - name: clone-app-repo
            template: app-git-clone
        - - name: clone-pipeline-repo
            template: pipeline-git-clone

        - - name: kaniko-build-app
            template: kaniko-app
            arguments:
              parameters:
                - name: sha
                  value: "{{steps.clone-app-repo.outputs.parameters.sha}}"

        - - name: kaniko-build-train
            template: kaniko-train
            arguments:
              parameters:
                - name: sha
                  value: "{{steps.clone-pipeline-repo.outputs.parameters.train-sha}}"

        - - name: kaniko-build-eval
            template: kaniko-eval
            arguments:
              parameters:
                - name: sha
                  value: "{{steps.clone-pipeline-repo.outputs.parameters.eval-sha}}"

    - name: app-git-clone
      outputs:
        parameters:
          - name: sha
            valueFrom:
              path: /mnt/workspace-app/sha.txt
      container:
        image: alpine/git
        command: [sh, -c]
        args:
          - |
            git clone --branch main https://github.com/gauravkuwar/mlsysops-cms-app.git /mnt/workspace-app
            cd /mnt/workspace-app && git rev-parse --short HEAD > sha.txt
        volumeMounts:
          - name: workdir-app
            mountPath: /mnt/workspace-app

    - name: pipeline-git-clone
      outputs:
        parameters:
          - name: train-sha
            valueFrom:
              path: /mnt/workspace/train/sha.txt
          - name: eval-sha
            valueFrom:
              path: /mnt/workspace/eval/sha.txt
      container:
        image: alpine/git
        command: [sh, -c]
        args:
          - |
            git clone --branch main https://github.com/gauravkuwar/mlsysops-cms-pipeline.git /mnt/workspace
            cd /mnt/workspace/train && git log -n1 --pretty=format:%h > sha.txt
            cd /mnt/workspace/eval && git log -n1 --pretty=format:%h > sha.txt
        volumeMounts:
          - name: workdir
            mountPath: /mnt/workspace

    - name: kaniko-app
      inputs:
        parameters:
          - name: sha
      container:
        image: gcr.io/kaniko-project/executor:latest
        command: ["/kaniko/executor"]
        args:
          - --dockerfile=/mnt/workspace-app/Dockerfile
          - --context=/mnt/workspace-app
          - --destination=registry.kube-system.svc.cluster.local:5000/mlsysops-cms-app:{{inputs.parameters.sha}}
          - --insecure
        volumeMounts:
          - name: workdir-app
            mountPath: /mnt/workspace-app

    - name: kaniko-train
      inputs:
        parameters:
          - name: sha
      container:
        image: gcr.io/kaniko-project/executor:latest
        command: ["/kaniko/executor"]
        args:
          - --dockerfile=/mnt/workspace/train/Dockerfile
          - --context=/mnt/workspace/train
          - --destination=registry.kube-system.svc.cluster.local:5000/mlsysops-cms-train:{{inputs.parameters.sha}}
          - --insecure
        volumeMounts:
          - name: workdir
            mountPath: /mnt/workspace

    - name: kaniko-eval
      inputs:
        parameters:
          - name: sha
      container:
        image: gcr.io/kaniko-project/executor:latest
        command: ["/kaniko/executor"]
        args:
          - --dockerfile=/mnt/workspace/eval/Dockerfile
          - --context=/mnt/workspace/eval
          - --destination=registry.kube-system.svc.cluster.local:5000/mlsysops-cms-eval:{{inputs.parameters.sha}}
          - --insecure
        volumeMounts:
          - name: workdir
            mountPath: /mnt/workspace
